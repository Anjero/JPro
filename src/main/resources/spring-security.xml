<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
			 xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
			 xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security-3.2.xsd">
	<!-- 页面不过滤 -->
	<http pattern="/adminlogin*" security="none"/>
	<http pattern="/admin/finance/callback" security="none"/>
	<http pattern="/config/**" security="none"/>
	<http use-expressions="true" entry-point-ref="authenticationProcessingFilterEntryPoint">
		<!-- 登录配置 -->
		<form-login login-page="/adminlogin" default-target-url="/admin/dashboard"
					username-parameter="j_username" password-parameter="j_password" authentication-failure-url="/adminlogin?error=true"
					login-processing-url="/admin/security_check"/>
		<!-- 退出配置 -->
		<!-- logout-url:退出请求地址。系统默认:j_spring_security_logout logout-success-url:退出成功，跳转地址连接。
            delete-cookies:删除 cookies 内容。 success-handler-ref:退出回调接口。类需实现接口: LogoutSuccessHandler
            invalidate-session:如果设置为 true，用户的 Session 将会在退出时被失效。 -->
		<logout logout-url="/admin/logout" logout-success-url="/" invalidate-session="true"  delete-cookies="JSESSIONID"/>
		<!-- 对登录页面不进行拦截， 后面的*主要是请求页面可能会带有一些参数 -->
		<custom-filter before="FILTER_SECURITY_INTERCEPTOR" ref="myFilter" />
		<!--添加验证码拦截 -->
		<custom-filter before="FORM_LOGIN_FILTER" ref="validateCodeAuthenticationFilter" />

		<session-management invalid-session-url="/admin/logout">
			<concurrency-control/>
		</session-management>

		<!--cookie配置 -->
		<!--data-source-ref指定数据源 ，token-validity-seconds表示cookie的有效期（秒为单位），remember-me-parameter对应登录页上checkbox的名字 -->
		<remember-me token-validity-seconds="43200" remember-me-parameter="_spring_security_remember_me"  user-service-ref="myUserDetailService" token-repository-ref="myTokenRepository"/>
	</http>

	<!--<authentication-manager erase-credentials="false"></authentication-manager>-->

	<beans:bean id="myTokenRepository"
				class="net.anjero.pro.module.security.core.MyJdbcTokenRepositoryImpl">
		<beans:property name="dataSource" ref="dataSource"/>
	</beans:bean>

	<beans:bean id="authenticationProcessingFilterEntryPoint"
				class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
		<beans:property name="loginFormUrl" value="/"></beans:property>
	</beans:bean>

	<beans:bean id ="validateCodeAuthenticationFilter" class="net.anjero.pro.module.security.core.ValidateCodeAuthenticationFilter">
		<beans:property name="filterProcessesUrl" value="/admin/security_check"></beans:property>
		<beans:property name="authenticationManager"  ref="authenticationManager"></beans:property>
		<beans:property name="authenticationSuccessHandler" ref="loginLogAuthenticationSuccessHandler"></beans:property>
		<beans:property name="authenticationFailureHandler" ref="simpleUrlAuthenticationFailureHandler"></beans:property>
		<beans:property name="rememberMeServices" ref="rememberMeServices"></beans:property>
		<beans:property name="usernameParameter" value="j_username"></beans:property>
		<beans:property name="passwordParameter" value="j_password"></beans:property>
		<!--登陆上限次数限制 -->
		<beans:property name="maxLogin" value="5"></beans:property>
		<!--登陆上限时间限制(分钟) -->
		<beans:property name="time" value="15"></beans:property>
	</beans:bean>
	<!--登入成功 -->
	<beans:bean id="loginLogAuthenticationSuccessHandler" class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
	<beans:property name="defaultTargetUrl" value="/admin/dashboard"></beans:property>
	</beans:bean>

	<!--登入失败 -->
	<beans:bean id="simpleUrlAuthenticationFailureHandler" class="org.springframework.security.web.authentication.SimpleUrlAuthenticationFailureHandler">
		<beans:property name="defaultFailureUrl" value="/adminlogin?error=true"></beans:property>
	</beans:bean>

	<!-- 一个自定义的filter，必须包含authenticationManager,accessDecisionManager,securityMetadataSource三个属性，
        我们的所有控制将在这三个类中实现，解释详见具体配置 -->
	<beans:bean id="myFilter"
				class="net.anjero.pro.module.security.core.MyFilterSecurityInterceptor">
		<beans:property name="authenticationManager" ref="authenticationManager"/>
		<beans:property name="accessDecisionManager" ref="myAccessDecisionManagerBean"/>
		<beans:property name="securityMetadataSource" ref="securityMetadataSource"/>
	</beans:bean>

	<!-- 认证管理器，实现用户认证的入口，主要实现UserDetailsService接口即可 -->
	<authentication-manager alias="authenticationManager" erase-credentials="false">
		<authentication-provider user-service-ref="myUserDetailService">
			<password-encoder ref="md5PasswdEncoder"><!-- 用户加密解密类 -->
				<salt-source user-property="username"/>
			</password-encoder>
		</authentication-provider>
	</authentication-manager>


	<beans:bean id="myUserDetailService"
				class="net.anjero.pro.module.security.core.MyUserDetailService"/>

	<!-- 访问决策器，决定某个用户具有的角色，是否有足够的权限去访问某个资源 -->
	<beans:bean id="myAccessDecisionManagerBean"
				class="net.anjero.pro.module.security.core.MyAccessDecisionManager"/>

	<!-- 资源源数据定义，即定义某一资源可以被哪些角色访问 -->
	<beans:bean id="securityMetadataSource"
				class="net.anjero.pro.module.security.core.MyInvocationSecurityMetadataSource"/>

	<!-- 用户详情管理类使用的加密方式 -->
	<beans:bean id="md5PasswdEncoder"
				class="org.springframework.security.authentication.encoding.Md5PasswordEncoder"/>
	<!-- PasswordEncoder 密码接口 -->

	<beans:bean id="rememberMeServices" class="org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServices">
		<beans:property name="userDetailsService" ref="myUserDetailService"/>
		<beans:property name="tokenRepository" ref="myTokenRepository"/>
		<beans:property name="parameter" value="_spring_security_remember_me"/>
		<!--<beans:property name="alwaysRemember" value="false"/>-->
		<beans:property name="tokenValiditySeconds" value="43200"/>
		<beans:property name="key" value="123456"/>
	</beans:bean>

	<beans:bean id ="rememberMeProvider" class="org.springframework.security.authentication.RememberMeAuthenticationProvider">
		<beans:property name="key" value="123456"/>
	</beans:bean>

	<beans:bean id="rememberMeFilter" class="org.springframework.security.web.authentication.rememberme.RememberMeAuthenticationFilter">
		<beans:property name="rememberMeServices" ref="rememberMeServices" />
		<beans:property name="authenticationManager" ref="authenticationManager" />
	</beans:bean>
</beans:beans>